Setting up the namespaces

We need to set up two nodes/machines and create a namespace within each  to act as end-points for the tunnel. We use the following instruction to set the namespaces up

XXX: Add diagram

On `node1`  we create a namespace ns1 and add a veth interface to the namespace. We assign ip addresses in the 10.200.1/24 range to interfaces in the ns1 and root namespaces as follows:

`ip netns add ns1`
`ip link add v-eth1 type veth peer name v-peer1`
`ip link set v-peer1 netns ns1`
`ip addr add 10.200.1.1/24 dev v-eth1`
`ip link set v-eth1 up`

`ip netns exec ns1 ip addr add 10.200.1.2/24 dev v-peer1`
`ip netns exec ns1 ip link set v-peer1 up`
`ip netns exec ns1 ip link set lo up`
`ip netns exec ns1 ip route add default via 10.200.1.1`



Similarly on `node2` we create a namespace ns2 and assign ip addresses in  10.200.2/24 to the veth interface in the root and ns2 namespace as follows:

`ip netns add ns2`
`ip link add v-eth2 type veth peer name v-peer2`
`ip link set v-peer2 netns ns2`
`ip addr add 10.200.2.1/24 dev v-eth2`
`ip link set v-eth2 up`

`ip netns exec ns2 ip addr add 10.200.2.2/24 dev v-peer2`
`ip netns exec ns2 ip link set v-peer2 up`
`ip netns exec ns2 ip link set lo up`
`ip netns exec ns2 ip route add default via 10.200.2.1`

We then need to setup routing entries in the root namespaces to route traffic to the  tunnel. We first enable IP-forwarding on the nodes with
`echo 1 > /proc/sys/net/ipv4/ip_forward`

On node1:
`ip route add 10.200.2.0/24 dev v-eth1`

On node2:
`ip route add 10.200.1.0/24 dev v-eth2`

Attaching XDP Geneve Implementation to interfaces:

Generating Traffic: